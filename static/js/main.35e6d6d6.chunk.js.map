{"version":3,"sources":["Swoosh.mp3","PlayerSecondAttack.gif","J_OW.mp3","G_Owah.mp3","J_HAHA.mp3","J_TryAgain.mp3","G_HaHaHa.mp3","Stance0.jpg","WindUp.gif","PlayerFirstSwing.gif","SecondWindUp.gif","EnemyFirstAttack.gif","EnemySecondAttack.gif","PlayerGameOver.gif","EnemyGameOver.gif","FighterGonnaFight.mp3","SwingHit.mp3","J_Oowah.mp3","G_Owah2.mp3","OutdoorWind.mp3","StrengthBox.js","ConstitutionBox.js","IntelligenceBox.js","WisdomBox.js","CharismaBox.js","DexterityBox.js","Stats.js","StatsList.js","BonusBar.js","BadGuyStats.js","CompletedStats.js","Main.js","Intro.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","canDrop","isOver","List","_templateObject2","StatsContainer","_templateObject3","Header","_templateObject4","spec","drop","props","monitor","component","id","getItem","list","some","stat","alert","setStrength","StrengthBox","_this$props","this","connectDropTarget","react_default","a","createElement","align","style","flex","padding","height","map","_ref","title","key","React","Component","DropTarget","connect","dropTarget","ConstitutionBox_templateObject","ConstitutionBox_templateObject2","ConstitutionBox_templateObject3","ConstitutionBox_templateObject4","setConstitution","ConstitutionBox","ConstitutionBox_Container","ConstitutionBox_Header","ConstitutionBox_List","ConstitutionBox_StatsContainer","IntelligenceBox_templateObject","IntelligenceBox_templateObject2","IntelligenceBox_templateObject3","IntelligenceBox_templateObject4","setIntelligence","IntelligenceBox","IntelligenceBox_Container","IntelligenceBox_Header","IntelligenceBox_List","IntelligenceBox_StatsContainer","WisdomBox_templateObject","WisdomBox_templateObject2","WisdomBox_templateObject3","WisdomBox_templateObject4","setWisdom","WisdomBox","WisdomBox_Container","WisdomBox_Header","WisdomBox_List","WisdomBox_StatsContainer","CharismaBox_templateObject","CharismaBox_templateObject2","CharismaBox_templateObject3","CharismaBox_templateObject4","setCharisma","CharismaBox","CharismaBox_Container","CharismaBox_Header","CharismaBox_List","CharismaBox_StatsContainer","DexterityBox_templateObject","DexterityBox_templateObject2","DexterityBox_templateObject3","HeaderStyle","DexterityBox_templateObject4","setDexterity","DexterityBox","DexterityBox_Container","DexterityBox_List","DexterityBox_StatsContainer","Stats_templateObject","isDragging","Stats","connectDragSource","margin","Stats_Container","DragSource","beginDrag","dragSource","connectDragPreview","dragPreview","StatsList_templateObject","StatsList_templateObject2","StatsList_templateObject3","StatList","StatsList_Container","StatsList_Header","StatsList_List","src_Stats","GetModifier","x","Math","floor","BonusBar","MaxHitPoints","_this","Constitution","GetDecorator","Fragment","class","Strength","Dexterity","Intelligence","Wisdom","Charisma","CurrentHitPoints","min","low","high","optimum","value","max","BadGuyStats","_this$props$BadGuyStr","BadGuyStrength","_this$props$BadGuyStr2","BadGuyStrengthBonus","_this$props$BadGuyDex","BadGuyDexterity","_this$props$BadGuyCon","BadGuyConstitution","_this$props$BadGuyInt","BadGuyIntelligence","_this$props$BadGuyWis","BadGuyWisdom","_this$props$BadGuyCha","BadGuyCharisma","_this$props$BadGuyDex2","BadGuyDexterityBonus","_this$props$BadGuyCon2","BadGuyConstitutionBonus","_this$props$BadGuyInt2","BadGuyIntelligenceBonus","_this$props$BadGuyWis2","BadGuyWisdomBonus","_this$props$BadGuyCha2","BadGuyCharismaBonus","_this$props$BadGuyMax","BadGuyMaxHitPoints","BadGuyCurrentHitPoints","CompletedStats","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ResetBadGuyTurn","setState","PlayerTurn","EnemyAction","BadGuyActionTaken","BadGuyBonusActionTaken","ResetPlayerTurn","ActionTaken","BonusActionTaken","SuccessfulHit","BonusAttackTaken","BonusRolledToHit","BonusRolledDamage","BonusAttacked","Attacked","RolledToHit","RolledDamage","BeginCombat","HigherMod","ScrollLog","textarea","document","getElementById","scrollTop","scrollHeight","UpdateText","Text","setTimeout","UpdateCurrentHitPoints","UpdateBadGuyHitPoints","SetPlayerTurnFalse","SetPlayerTurnTrue","UpdateAction","state","RollInitClicked","Audio","FighterGonnaFight","play","onClick","RollInit","PlayerAttack","PlayerRollToHit","RollDamage","GameOver","PlayerWins","BonusAction1","BonusPlayerRollToHit","BonusSuccessfulHit","BonusRollDamage","BonusPlayerAttack","BonusAction2","SecondWindUsed","PlayerSecondWind","PlayerRoll","random","EnemyRoll","CombatImage","WindUp","RollToHitValue","ProficiencyBonus","BadGuyArmorClass","PlayerSecondAttack","Swoosh","EnemyGameOver","Ow","downSeconds","Delay","Oowah","seconds","Delay2","HaHaHa","SecondWindUp","Swoosh2","Damage","Number","SwingHit","PlayerFirstSwing","Wind","SecondWind","EnemyFirstAttack","BadGuyProficiencyBonus","ArmorClass","console","log","Owah","EnemyBonusAction","EnemySecondWind","BadGuySecondWindUsed","EnemyVictory","EnemySecondAttack","toString","EnemyTurnOver","PlayerGameOver","Owah2","HaHa","TryAgain","Stance0","BonusRollInitClicked","src_BonusBar","src","alt","width","resizeMode","src_BadGuyStats","Main_templateObject","randomStat","fourD6","sort","b","shift","reduce","initialList","added","Main","addedStrength","addedDexterity","addedConstitution","addedIntelligence","addedWisdom","addedCharisma","CurHP","MaxHP","nextModule","handleDropDexterity","find","stats","filter","handleDropConstitution","handleDropIntelligence","handleDropStrength","handleDropWisdom","handleDropCharisma","Button","UpdatePage","_this$state","src_CompletedStats_0","Main_Container","StatsList","src_StrengthBox","src_DexterityBox","src_ConstitutionBox","src_IntelligenceBox","src_WisdomBox","src_CharismaBox","Intro","EndIntro","src_Main","App","esm","backend","HTML5Backend","src_Intro_0","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.35e6d6d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Swoosh.aad7e599.mp3\";","module.exports = __webpack_public_path__ + \"static/media/PlayerSecondAttack.be85a36d.gif\";","module.exports = __webpack_public_path__ + \"static/media/J_OW.485f9922.mp3\";","module.exports = __webpack_public_path__ + \"static/media/G_Owah.826b5de7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/J_HAHA.4a2f9903.mp3\";","module.exports = __webpack_public_path__ + \"static/media/J_TryAgain.5f7e0f40.mp3\";","module.exports = __webpack_public_path__ + \"static/media/G_HaHaHa.465a1f0d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Stance0.84ed9073.jpg\";","module.exports = __webpack_public_path__ + \"static/media/WindUp.649bbc42.gif\";","module.exports = __webpack_public_path__ + \"static/media/PlayerFirstSwing.f32e1870.gif\";","module.exports = __webpack_public_path__ + \"static/media/SecondWindUp.f1a2fbcc.gif\";","module.exports = __webpack_public_path__ + \"static/media/EnemyFirstAttack.b0bfebfc.gif\";","module.exports = __webpack_public_path__ + \"static/media/EnemySecondAttack.be4955e0.gif\";","module.exports = __webpack_public_path__ + \"static/media/PlayerGameOver.4d6bb7de.gif\";","module.exports = __webpack_public_path__ + \"static/media/EnemyGameOver.1743d940.gif\";","module.exports = __webpack_public_path__ + \"static/media/FighterGonnaFight.99c4c691.mp3\";","module.exports = __webpack_public_path__ + \"static/media/SwingHit.3dd93557.mp3\";","module.exports = __webpack_public_path__ + \"static/media/J_Oowah.fe7291c3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/G_Owah2.fd2a5131.mp3\";","module.exports = __webpack_public_path__ + \"static/media/OutdoorWind.6071696b.mp3\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DropTarget } from \"react-dnd\";\r\n\r\nconst Container = styled.div`\r\n  /*  flex: 1 0; */\r\n  /* max-height: \"15 vh\";\r\n  min-height: \"15 vh\"; */\r\n  height: 150px;\r\n  width: 120px;\r\n  box-shadow: 0 0 ${p => (p.canDrop ? \"1.75\" : \"0.75\")}rem 0.1rem\r\n    rgba(100, 0, 0, 0.5);\r\n  background-color: ${p => (p.isOver ? \"rgba(100, 0, 0, 0.1)\" : \"\")};\r\n  margin: 1rem;\r\n`;\r\n\r\nconst List = styled.div`\r\n  justify-content: center;\r\n  text-align: \"center\";\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  box-shadow: inset 0 0 2rem rgba(100, 0, 0, 0.3);\r\n  animation: 1s linear 0s fade-out;\r\n  @keyframes fade-out {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\n  const spec = {\r\n    drop(props, monitor, component){\r\n      const { id } = monitor.getItem();\r\n      if (props.list.some(stat => stat.id > 0)) {\r\n      //if (props.list.some(stats => stats.id === id)) {\r\n        alert(\"This stat has already been filled\");\r\n        return;\r\n      }\r\n    props.setStrength(id);\r\n    }\r\n  }\r\n\r\n  function collect(connect, monitor) {\r\n    return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    canDrop: monitor.canDrop(),\r\n    isOver: monitor.isOver(),\r\n    }\r\n  }\r\n//creates a drag and drop destination container\r\nclass StrengthBox extends React.Component {\r\n  render() {\r\n    const { list, canDrop, isOver, connectDropTarget } = this.props;\r\n\r\n      return (\r\n        <Container canDrop={canDrop} isOver={isOver}>\r\n          {connectDropTarget(\r\n            <div align=\"center\" style={{ flex: 1, padding: \"0rem\", height: \"14vh\" }}>\r\n              <Header>\r\n                <h3>Strength</h3>\r\n              </Header>\r\n              <List>\r\n                {list.map(({ id, title }) => (\r\n                  <StatsContainer key={id}>{title}</StatsContainer>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default DropTarget(\"STAT_ITEM\", spec, collect)(StrengthBox);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DropTarget } from \"react-dnd\";\r\n\r\nconst Container = styled.div`\r\n  /*  flex: 1 0; */\r\n  /* max-height: \"15 vh\";\r\n  min-height: \"15 vh\"; */\r\n  height: 150px;\r\n  width: 120px;\r\n  box-shadow: 0 0 ${p => (p.canDrop ? \"1.75\" : \"0.75\")}rem 0.1rem\r\n    rgba(100, 0, 0, 0.5);\r\n  background-color: ${p => (p.isOver ? \"rgba(100, 0, 0, 0.1)\" : \"\")};\r\n  margin: 1rem;\r\n`;\r\n\r\nconst List = styled.div`\r\n  justify-content: center;\r\n  text-align: \"center\";\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  box-shadow: inset 0 0 2rem rgba(100, 0, 0, 0.3);\r\n  animation: 1s linear 0s fade-out;\r\n  @keyframes fade-out {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\n  const spec = {\r\n    drop(props, monitor, component){\r\n      const { id } = monitor.getItem();\r\n      if (props.list.some(stat => stat.id > 0)) {\r\n      //if (props.list.some(stats => stats.id === id)) {\r\n        alert(\"This stat has already been filled\");\r\n        return;\r\n      }\r\n    props.setConstitution(id);\r\n    }\r\n  }\r\n\r\n  function collect(connect, monitor) {\r\n    return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    canDrop: monitor.canDrop(),\r\n    isOver: monitor.isOver(),\r\n    }\r\n  }\r\n//creates a drag and drop destination container\r\nclass ConstitutionBox extends React.Component {\r\n  render() {\r\n    const { list, canDrop, isOver, connectDropTarget } = this.props;\r\n\r\n      return (\r\n        <Container canDrop={canDrop} isOver={isOver}>\r\n          {connectDropTarget(\r\n            <div align=\"center\" style={{ flex: 1, padding: \"0rem\", height: \"14vh\" }}>\r\n              <Header>\r\n                <h3>Constitution</h3>\r\n              </Header>\r\n              <List>\r\n                {list.map(({ id, title }) => (\r\n                  <StatsContainer key={id}>{title}</StatsContainer>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default DropTarget(\"STAT_ITEM\", spec, collect)(ConstitutionBox);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DropTarget } from \"react-dnd\";\r\n\r\nconst Container = styled.div`\r\n  /*  flex: 1 0; */\r\n  /* max-height: \"15 vh\";\r\n  min-height: \"15 vh\"; */\r\n  height: 150px;\r\n  width: 120px;\r\n  box-shadow: 0 0 ${p => (p.canDrop ? \"1.75\" : \"0.75\")}rem 0.1rem\r\n    rgba(100, 0, 0, 0.5);\r\n  background-color: ${p => (p.isOver ? \"rgba(100, 0, 0, 0.1)\" : \"\")};\r\n  margin: 1rem;\r\n`;\r\n\r\nconst List = styled.div`\r\n  justify-content: center;\r\n  text-align: \"center\";\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  box-shadow: inset 0 0 2rem rgba(100, 0, 0, 0.3);\r\n  animation: 1s linear 0s fade-out;\r\n  @keyframes fade-out {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\n  const spec = {\r\n    drop(props, monitor, component){\r\n      const { id } = monitor.getItem();\r\n      if (props.list.some(stat => stat.id > 0)) {\r\n      //if (props.list.some(stats => stats.id === id)) {\r\n        alert(\"This stat has already been filled\");\r\n        return;\r\n      }\r\n    props.setIntelligence(id);\r\n    }\r\n  }\r\n\r\n  function collect(connect, monitor) {\r\n    return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    canDrop: monitor.canDrop(),\r\n    isOver: monitor.isOver(),\r\n    }\r\n  }\r\n//creates a drag and drop destination container\r\nclass IntelligenceBox extends React.Component {\r\n  render() {\r\n    const { list, canDrop, isOver, connectDropTarget } = this.props;\r\n\r\n      return (\r\n        <Container canDrop={canDrop} isOver={isOver}>\r\n          {connectDropTarget(\r\n            <div align=\"center\" style={{ flex: 1, padding: \"0rem\", height: \"14vh\" }}>\r\n              <Header>\r\n                <h3>Intelligence</h3>\r\n              </Header>\r\n              <List>\r\n                {list.map(({ id, title }) => (\r\n                  <StatsContainer key={id}>{title}</StatsContainer>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default DropTarget(\"STAT_ITEM\", spec, collect)(IntelligenceBox);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DropTarget } from \"react-dnd\";\r\n\r\nconst Container = styled.div`\r\n  /*  flex: 1 0; */\r\n  /* max-height: \"15 vh\";\r\n  min-height: \"15 vh\"; */\r\n  height: 150px;\r\n  width: 120px;\r\n  box-shadow: 0 0 ${p => (p.canDrop ? \"1.75\" : \"0.75\")}rem 0.1rem\r\n    rgba(100, 0, 0, 0.5);\r\n  background-color: ${p => (p.isOver ? \"rgba(100, 0, 0, 0.1)\" : \"\")};\r\n  margin: 1rem;\r\n`;\r\n\r\nconst List = styled.div`\r\n  justify-content: center;\r\n  text-align: \"center\";\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  box-shadow: inset 0 0 2rem rgba(100, 0, 0, 0.3);\r\n  animation: 1s linear 0s fade-out;\r\n  @keyframes fade-out {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\n  const spec = {\r\n    drop(props, monitor, component){\r\n      const { id } = monitor.getItem();\r\n      if (props.list.some(stat => stat.id > 0)) {\r\n      //if (props.list.some(stats => stats.id === id)) {\r\n        alert(\"This stat has already been filled\");\r\n        return;\r\n      }\r\n    props.setWisdom(id);\r\n    }\r\n  }\r\n\r\n  function collect(connect, monitor) {\r\n    return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    canDrop: monitor.canDrop(),\r\n    isOver: monitor.isOver(),\r\n    }\r\n  }\r\n//creates a drag and drop destination container\r\nclass WisdomBox extends React.Component {\r\n  render() {\r\n    const { list, canDrop, isOver, connectDropTarget } = this.props;\r\n\r\n      return (\r\n        <Container canDrop={canDrop} isOver={isOver}>\r\n          {connectDropTarget(\r\n            <div align=\"center\" style={{ flex: 1, padding: \"0rem\", height: \"14vh\" }}>\r\n              <Header>\r\n                <h3>Wisdom</h3>\r\n              </Header>\r\n              <List>\r\n                {list.map(({ id, title }) => (\r\n                  <StatsContainer key={id}>{title}</StatsContainer>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default DropTarget(\"STAT_ITEM\", spec, collect)(WisdomBox);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DropTarget } from \"react-dnd\";\r\n\r\nconst Container = styled.div`\r\n  /*  flex: 1 0; */\r\n  /* max-height: \"15 vh\";\r\n  min-height: \"15 vh\"; */\r\n  height: 150px;\r\n  width: 120px;\r\n  box-shadow: 0 0 ${p => (p.canDrop ? \"1.75\" : \"0.75\")}rem 0.1rem\r\n    rgba(100, 0, 0, 0.5);\r\n  background-color: ${p => (p.isOver ? \"rgba(100, 0, 0, 0.1)\" : \"\")};\r\n  margin: 1rem;\r\n`;\r\n\r\nconst List = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  box-shadow: inset 0 0 2rem rgba(100, 0, 0, 0.3);\r\n  animation: 1s linear 0s fade-out;\r\n  @keyframes fade-out {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\n  const spec = {\r\n    drop(props, monitor, component){\r\n      const { id } = monitor.getItem();\r\n      if (props.list.some(stat => stat.id > 0)) {\r\n      //if (props.list.some(stats => stats.id === id)) {\r\n        alert(\"This stat has already been filled\");\r\n        return;\r\n      }\r\n    props.setCharisma(id);\r\n    }\r\n  }\r\n\r\n  function collect(connect, monitor) {\r\n    return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    canDrop: monitor.canDrop(),\r\n    isOver: monitor.isOver(),\r\n    }\r\n  }\r\n//creates a drag and drop destination container\r\nclass CharismaBox extends React.Component {\r\n  render() {\r\n    const { list, canDrop, isOver, connectDropTarget } = this.props;\r\n\r\n      return (\r\n        <Container canDrop={canDrop} isOver={isOver}>\r\n          {connectDropTarget(\r\n            <div align=\"center\" style={{ flex: 1, padding: \"0rem\", height: \"14vh\" }}>\r\n              <Header>\r\n                <h3>Charisma</h3>\r\n              </Header>\r\n              <List>\r\n                {list.map(({ id, title }) => (\r\n                  <StatsContainer key={id} >{title}</StatsContainer>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default DropTarget(\"STAT_ITEM\", spec, collect)(CharismaBox);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DropTarget } from \"react-dnd\";\r\n\r\nconst Container = styled.div`\r\nheight: 150px;\r\nwidth: 120px;\r\nbox-shadow: 0 0 ${p => (p.canDrop ? \"1.75\" : \"0.75\")}rem 0.1rem\r\n  rgba(100, 0, 0, 0.5);\r\nbackground-color: ${p => (p.isOver ? \"rgba(100, 0, 0, 0.1)\" : \"\")};\r\nmargin: 1rem;\r\n`;\r\nconst List = styled.div`\r\n  justify-content: center;\r\n  text-align: \"center\";\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  box-shadow: inset 0 0 2rem rgba(100, 0, 0, 0.3);\r\n  animation: 1s linear 0s fade-out;\r\n  @keyframes fade-out {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst HeaderStyle = styled.div`\r\ntext-align: center;\r\n  flex: 1;\r\n`;\r\n\r\n  const spec = {\r\n    drop(props, monitor, component){\r\n      const { id } = monitor.getItem();\r\n      if (props.list.some(stat => stat.id > 0)) {\r\n      //if (props.list.some(stats => stats.id === id)) {\r\n        alert(\"This stat has already been filled\");\r\n        return;\r\n      }\r\n    props.setDexterity(id);\r\n    }\r\n  }\r\n\r\n  function collect(connect, monitor) {\r\n    return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    canDrop: monitor.canDrop(),\r\n    isOver: monitor.isOver(),\r\n    }\r\n  }\r\n\r\n\r\n//creates a drag and drop destination container\r\nclass DexterityBox extends React.Component {\r\n  render() {\r\n    const { list, canDrop, isOver, connectDropTarget } = this.props;\r\n\r\n      return (\r\n        <Container canDrop={canDrop} isOver={isOver}>\r\n          {connectDropTarget(\r\n            <div align=\"center\" style={{ flex: 1, padding: \"0rem\", height: \"14vh\" }}>\r\n\r\n                <HeaderStyle>\r\n                  <h3>Dexterity</h3>\r\n                </HeaderStyle>\r\n\r\n              <List>\r\n                {list.map(({ id, title }) => (\r\n                  <StatsContainer key={id}>{title}</StatsContainer>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default DropTarget(\"STAT_ITEM\", spec, collect)(DexterityBox);\r\n","import React from \"react\";\r\nimport { DragSource } from \"react-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n  box-shadow: inset 0 0 2rem rgba(0, 0, 100, 0.3);\r\n  padding: 1rem; //Leave this at 1rem\r\n  &:hover {\r\n    background-color: ${p =>\r\n      p.isDragging ? \"rgba(100, 0, 0, 0.5)\" : \"rgba(0, 0, 100, 0.5)\"};\r\n  }\r\n`;\r\n\r\n//keeps track of drag source data\r\nconst statSource = {\r\n  beginDrag(props, monitor){\r\n    const item = { id: props.id };\r\n    return item;\r\n  }\r\n};\r\n\r\n//keeps track of drag source data\r\nfunction collect(connect, monitor) {\r\n  return{\r\n  connectDragSource: connect.dragSource(),\r\n  connectDragPreview: connect.dragPreview(),\r\n  isDragging: monitor.isDragging()\r\n};\r\n}\r\n\r\n//creates draggable container for and holding each value on the stat list\r\nclass Stats extends React.Component {\r\n  render() {\r\n    const { title, isDragging, connectDragSource } = this.props;\r\n    return connectDragSource(\r\n      <div align=\"center\" style={{margin: \"0rem\", padding: \"0.5rem\"}}>\r\n        <Container isDragging={isDragging}>{title}</Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragSource(\"STAT_ITEM\", statSource, collect)(Stats);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Stats from \"./Stats\";\r\n\r\nconst Header = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\nconst List = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Container = styled.div`\r\nalign: center;\r\ndisplay: flex;\r\nflex-direction: column;\r\nflex: ;\r\nbox-shadow: 0 0 0.75rem 0.1rem rgba(0, 0, 100, 0.5);\r\nmargin: 1rem;\r\npadding: 0.5rem;\r\n`;\r\n\r\n//Displays the random stats generated in Main.js\r\nclass StatList extends React.Component {\r\n  render() {\r\n    const { list } = this.props;\r\n    return (\r\n      <Container>\r\n        <Header>\r\n          <h2>Stats</h2>\r\n        </Header>\r\n        <List>\r\n          {list.map(({ id, title }) => <Stats key={id} id={id} title={title} />)}\r\n        </List>\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatList;\r\n","import React from \"react\";\r\n\r\nfunction GetModifier(x){\r\n  x = (Math.floor((x-10)/2));\r\n  return x;\r\n}\r\n\r\nclass BonusBar extends React.Component{\r\n\r\n  MaxHitPoints = () => {return(this.GetModifier(this.props.Constitution) + 10)}\r\n\r\n  GetDecorator = (x) => {\r\n    if(x>0){\r\n      return \"+\"\r\n    }\r\n  }\r\n\r\n  GetModifier = (x) => {\r\n    x = (Math.floor((x-10)/2));\r\n    return x;\r\n  }\r\n\r\n  render(){\r\n\r\n    return(\r\n      <>\r\n      <div class=\"FullVerticalWrapper\">\r\n        <div class=\"Scores\">Your Stats\r\n          <div class=\"StatBonus\">\r\n            <label>STRENGTH</label>{this.GetDecorator(GetModifier(this.props.Strength))}{GetModifier(this.props.Strength)}\r\n            <div class=\"StatValue\">{this.props.Strength}\r\n            </div>\r\n          </div>\r\n          <div class=\"StatBonus\">\r\n            <label>DEXTERITY</label>{this.GetDecorator(GetModifier(this.props.Dexterity))}{GetModifier(this.props.Dexterity)}\r\n            <div class=\"StatValue\">{this.props.Dexterity}\r\n            </div>\r\n          </div>\r\n          <div class=\"StatBonus\">\r\n            <label>CONSTITUTION</label>{this.GetDecorator(GetModifier(this.props.Constitution))}{GetModifier(this.props.Constitution)}\r\n            <div class=\"StatValue\">{this.props.Constitution}\r\n            </div>\r\n          </div>\r\n          <div class=\"StatBonus\">\r\n            <label>INTELLIGENCE</label>{this.GetDecorator(GetModifier(this.props.Intelligence))}{GetModifier(this.props.Intelligence)}\r\n            <div class=\"StatValue\">{this.props.Intelligence}\r\n            </div>\r\n          </div>\r\n          <div class=\"StatBonus\">\r\n            <label>WISDOM</label>{this.GetDecorator(GetModifier(this.props.Wisdom))}{GetModifier(this.props.Wisdom)}\r\n            <div class=\"StatValue\">{this.props.Wisdom}\r\n            </div>\r\n          </div>\r\n          <div class=\"StatBonus\">\r\n            <label>CHARISMA</label>{this.GetDecorator(GetModifier(this.props.Charisma))}{GetModifier(this.props.Charisma)}\r\n            <div class=\"StatValue\">{this.props.Charisma}\r\n            </div>\r\n          </div>\r\n          <div class=\"StatBonus\">\r\n\r\n            <label>HIT POINTS</label>{this.props.CurrentHitPoints}\r\n          </div>\r\n          <meter min=\"0\" low={this.MaxHitPoints()*.25} high={this.MaxHitPoints()*.75} optimum = {this.MaxHitPoints()}value={this.props.CurrentHitPoints} max={this.MaxHitPoints()}></meter>\r\n        </div>\r\n      </div>\r\n\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\nexport default BonusBar;\r\n","import React from \"react\";\r\nimport './BadGuy.css';\r\n\r\n\r\nfunction GetDecorator(x){  //returns \"+\" for positive numbers, used in bonus bar\r\n  if(x>0){\r\n    return \"+\"\r\n  }\r\n}\r\n\r\nfunction GetModifier(x){ // returns modifier (bonus) of a stat's value\r\n  x = (Math.floor((x-10)/2));\r\n  return x;\r\n}\r\n\r\nclass BadGuyStats extends React.Component{\r\n\r\nrender(){\r\n\r\n  const {\r\n    BadGuyStrength = 15,\r\n    BadGuyStrengthBonus = GetModifier(BadGuyStrength),\r\n    // BadGuyProficiencyBonus = 2, //possibly to be used later\r\n    // BadGuyArmorClass = 16, //possibly to be used later\r\n    BadGuyDexterity = 13,\r\n    BadGuyConstitution = 14,\r\n    BadGuyIntelligence = 10,\r\n    BadGuyWisdom = 8,\r\n    BadGuyCharisma = 12,\r\n    BadGuyDexterityBonus = GetModifier(BadGuyDexterity),\r\n    BadGuyConstitutionBonus = GetModifier(BadGuyConstitution),\r\n    BadGuyIntelligenceBonus = GetModifier(BadGuyIntelligence),\r\n    BadGuyWisdomBonus = GetModifier(BadGuyWisdom),\r\n    BadGuyCharismaBonus = GetModifier(BadGuyCharisma),\r\n    BadGuyMaxHitPoints = 10 + BadGuyConstitutionBonus,\r\n\r\n  } = this.props;\r\n\r\n\r\n\r\n\r\n  return(\r\n    <>\r\n    <div class=\"FullVerticalWrapper\">\r\n      <div class=\"BadGuyScores\">Bad Guy Stats\r\n        <div class=\"BadGuyStatBonus\">\r\n          <label>STRENGTH</label>{GetDecorator(BadGuyStrengthBonus)}{BadGuyStrengthBonus}\r\n          <div class=\"BadGuyStatValue\">{BadGuyStrength}\r\n          </div>\r\n        </div>\r\n        <div class=\"BadGuyStatBonus\">\r\n          <label>DEXTERITY</label>{GetDecorator(BadGuyDexterityBonus)}{BadGuyDexterityBonus}\r\n          <div class=\"BadGuyStatValue\">{BadGuyDexterity}\r\n          </div>\r\n        </div>\r\n        <div class=\"BadGuyStatBonus\">\r\n          <label>CONSTITUTION</label>{GetDecorator(BadGuyConstitutionBonus)}{BadGuyConstitutionBonus}\r\n          <div class=\"BadGuyStatValue\">{BadGuyConstitution}\r\n          </div>\r\n        </div>\r\n        <div class=\"BadGuyStatBonus\">\r\n          <label>INTELLIGENCE</label>{GetDecorator(BadGuyIntelligenceBonus)}{BadGuyIntelligenceBonus}\r\n          <div class=\"BadGuyStatValue\">{BadGuyIntelligence}\r\n          </div>\r\n        </div>\r\n        <div class=\"BadGuyStatBonus\">\r\n          <label>WISDOM</label>{GetDecorator(BadGuyWisdomBonus)}{BadGuyWisdomBonus}\r\n          <div class=\"BadGuyStatValue\">{BadGuyWisdom}\r\n          </div>\r\n        </div>\r\n        <div class=\"BadGuyStatBonus\">\r\n          <label>CHARISMA</label>{GetDecorator(BadGuyCharismaBonus)}{BadGuyCharismaBonus}\r\n          <div class=\"BadGuyStatValue\">{BadGuyCharisma}\r\n          </div>\r\n        </div>\r\n        <div class=\"StatBonus\">\r\n          <label>HIT POINTS</label>{this.props.BadGuyCurrentHitPoints}\r\n        </div>\r\n        <div>\r\n          <meter min=\"0\" low={BadGuyMaxHitPoints*.25} high={BadGuyMaxHitPoints*.75} optimum = {BadGuyMaxHitPoints}value={this.props.BadGuyCurrentHitPoints} max={BadGuyMaxHitPoints}></meter>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n}\r\nexport default BadGuyStats;\r\n","import React from \"react\";\r\nimport BonusBar from \"./BonusBar\"\r\nimport './CompletedStats.css';\r\nimport BadGuyStats from \"./BadGuyStats\"\r\nimport Stance0 from \"./Stance0.jpg\"\r\nimport WindUp from \"./WindUp.gif\"\r\nimport PlayerFirstSwing from \"./PlayerFirstSwing.gif\"\r\nimport PlayerSecondAttack from \"./PlayerSecondAttack.gif\"\r\nimport SecondWindUp from \"./SecondWindUp.gif\"\r\nimport EnemyFirstAttack from \"./EnemyFirstAttack.gif\"\r\nimport EnemySecondAttack from \"./EnemySecondAttack.gif\"\r\nimport PlayerGameOver from \"./PlayerGameOver.gif\"\r\nimport EnemyGameOver from \"./EnemyGameOver.gif\"\r\nimport FighterGonnaFight from \"./FighterGonnaFight.mp3\"\r\nimport Swoosh from \"./Swoosh.mp3\"\r\nimport Swoosh2 from \"./Swoosh.mp3\"\r\nimport SwingHit from \"./SwingHit.mp3\"\r\nimport Ow from \"./J_OW.mp3\"\r\nimport Oowah from \"./J_Oowah.mp3\"\r\nimport Owah2 from \"./G_Owah2.mp3\"\r\nimport HaHa from \"./J_HAHA.mp3\"\r\nimport TryAgain from \"./J_TryAgain.mp3\"\r\nimport HaHaHa from \"./G_HaHaHa.mp3\"\r\nimport Owah from \"./G_Owah.mp3\"\r\nimport Wind from \"./OutdoorWind.mp3\"\r\n\r\nclass CompletedStats extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.Text = \"Begin\";\r\n    this.BadGuyDexterityBonus = 1;\r\n    this.ProficiencyBonus = 2;\r\n    this.BadGuyProficiencyBonus = 2;\r\n    this.ArmorClass = 16;\r\n    this.BadGuyArmorClass = 16;\r\n    this.BadGuyMaxHitPoints = 12;\r\n    this.BadGuyCurrentHitPoints = 12;\r\n    this.CurrentHitPoints = Number(this.MaxHitPoints());\r\n    this.RollToHitValue = 0;\r\n    this.Swoosh = new Audio(Swoosh);\r\n    this.Swoosh2 = new Audio(Swoosh2);\r\n    this.SwingHit = new Audio(SwingHit);\r\n    this.Ow = new Audio(Ow);\r\n    this.Owah = new Audio(Owah)\r\n    this.Owah2 = new Audio(Owah2);\r\n    this.HaHa = new Audio(HaHa);\r\n    this.TryAgain = new Audio(TryAgain);\r\n    this.HaHaHa = new Audio(HaHaHa);\r\n    this.Wind = new Audio(Wind);\r\n\r\n    this.state = {\r\n      CombatImage : Stance0,\r\n      Text : this.Text,\r\n      RollInitClicked : false,\r\n      BonusRollInitClicked : false,\r\n      PlayerTurn : false,\r\n      Attacked : false,\r\n      BonusAttacked : false,\r\n      ActionTaken : false,\r\n      BonusActionTaken: false,\r\n      BonusAttackTaken : false,\r\n      RolledToHit : false,\r\n      BonusRolledToHit : false,\r\n      BonusRolledDamage : false,\r\n      SecondWindUsed : false,\r\n      SuccessfulHit : false,\r\n      BonusSuccessfulHit : false,\r\n      BadGuySecondWindUsed : false,\r\n      CurrentHitPoints : Number(this.MaxHitPoints()),\r\n      BadGuyCurrentHitPoints : this.BadGuyMaxHitPoints,\r\n      GameOver : false,\r\n      BadGuyActionTaken : false,\r\n      BadGuyBonusActionTaken : false\r\n    };\r\n  }\r\n\r\n//Resets states so \"Bad Guy\" logic can cycle\r\n  ResetBadGuyTurn = () => {\r\n    this.setState({ PlayerTurn : false}, this.EnemyAction);\r\n    this.setState({ BadGuyActionTaken : false });\r\n    this.setState({ BadGuyBonusActionTaken : false });\r\n  }\r\n\r\n//Resets states so user can go through their turn sequence again.\r\n  ResetPlayerTurn = () => {\r\n    this.setState({ PlayerTurn : true})\r\n    this.setState({ ActionTaken : false });\r\n    this.setState({ BonusActionTaken : false });\r\n    this.setState({ SuccessfulHit : false });\r\n    this.setState({ BonusAttackTaken : false });\r\n    this.setState({ BonusRolledToHit : false });\r\n    this.setState({ BonusRolledDamage : false });\r\n    this.setState({ BonusAttacked : false });\r\n    this.setState({ Attacked : false})\r\n    this.setState({ RolledToHit : false})\r\n    this.setState({ RolledDamage : false})\r\n    this.BeginCombat();\r\n  }\r\n\r\n//Returns higher modifier of Str or Dex stat, fighters can use either\r\n  HigherMod = () => {\r\n    if(this.props.Strength >= this.props.Dexterity){\r\n      return(this.GetModifier(this.props.Strength))\r\n    }\r\n    else{\r\n      return(this.GetModifier(this.props.Dexterity))\r\n    }\r\n  }\r\n\r\n//calculates D&D modifier of a stat.\r\n  GetModifier = (x) => {\r\n    x = (Math.floor((x-10)/2));\r\n    return x;\r\n  }\r\n\r\n//calculates maximum hit points based on chosen Constitution value.\r\n  MaxHitPoints = () => {return(this.GetModifier(this.props.Constitution) + 10)\r\n  }\r\n\r\n//keeps combat log scrolled to the bottom\r\n  ScrollLog = () => {\r\n    var textarea = document.getElementById('combatLog');\r\n    textarea.scrollTop = textarea.scrollHeight + textarea.scrollHeight;\r\n  }\r\n\r\n  UpdateText = () => {\r\n    this.setState({ Text : this.Text });\r\n    setTimeout(this.ScrollLog, 100)\r\n  }\r\n\r\n  UpdateCurrentHitPoints = () => {\r\n    this.setState({ CurrentHitPoints : this.CurrentHitPoints })\r\n  }\r\n\r\n  UpdateBadGuyHitPoints = () => {\r\n    this.setState({ BadGuyCurrentHitPoints : this.BadGuyCurrentHitPoints })\r\n  }\r\n\r\n  SetPlayerTurnFalse = () => {\r\n    this.setState({ PlayerTurn : false})\r\n  }\r\n\r\n  SetPlayerTurnTrue = () => {\r\n    this.setState({ PlayerTurn : true})\r\n  }\r\n\r\n  UpdateAction = () => {\r\n    this.setState({ ActionTaken : true});\r\n  }\r\n\r\n//Player action conditional combat logic, based on D&D.  Set states allow proceeding buttons\r\n//to be displayed after current button clicked.\r\n  BeginCombat = () => {\r\n    if(this.BadGuyCurrentHitPoints > 0){\r\n      if(!this.state.RollInitClicked){\r\n        var audio = new Audio(FighterGonnaFight);\r\n        audio.play();\r\n        return (\r\n             <button id=\"Init\" onClick={()=>{(this.RollInit)(this.setState({ RollInitClicked : true }))}}>\r\n             Roll for Initiative!\r\n           </button>\r\n       )\r\n      }\r\n      else if((this.state.RollInitClicked) && (!this.state.Attacked)){\r\n        return(\r\n          <button id=\"Init\" onClick={()=>{(this.PlayerAttack)(this.setState({ Attacked : true }))}}>\r\n            Attack!\r\n          </button>\r\n        )\r\n      }\r\n      else if((this.state.RollInitClicked) && (!this.state.RolledToHit)){\r\n        return(\r\n          <button id=\"Init\" onClick={()=>{(this.PlayerRollToHit)(this.setState({ RolledToHit : true }))}}>\r\n            Roll to Hit!\r\n          </button>\r\n        )\r\n      }\r\n      else if((!this.state.ActionTaken) && (this.state.RolledToHit) &&\r\n              (this.state.SuccessfulHit)){\r\n        return(\r\n          <button id=\"Init\" onClick={()=>{(this.RollDamage)(this.setState({ ActionTaken : true }))}}>\r\n            Roll Damage!\r\n          </button>\r\n        )\r\n      }\r\n      else if ((this.state.ActionTaken) && (this.state.BonusActionTaken) && (!this.state.GameOver)){\r\n        return(\r\n          <button id=\"Init\" onClick={()=>{this.ResetBadGuyTurn()}}>\r\n            End Turn\r\n          </button>\r\n        )\r\n      }\r\n    }\r\n    else if (!this.state.GameOver){\r\n          this.PlayerWins();\r\n          this.setState({ GameOver : true })\r\n      }\r\n    }\r\n\r\n//Bonus Attack combat sequence.  Sets states to allow proceeding buttons to be displayed\r\n  BonusAction1 = () => {\r\n    if((!this.state.BonusActionTaken) && (this.state.PlayerTurn) &&\r\n    (this.BadGuyCurrentHitPoints > 0) && (this.state.ActionTaken)){\r\n        if(!this.state.BonusAttacked){\r\n          return(\r\n            <button id=\"Init\" onClick={()=>{(this.BonusPlayerAttack)(this.setState({ BonusAttacked : true }))}}>\r\n              Bonus Action Attack!\r\n            </button>\r\n          )\r\n        }\r\n        else if((this.state.RollInitClicked) && (!this.state.BonusRolledToHit)){\r\n          return(\r\n            <button id=\"Init\" onClick={()=>{(this.BonusPlayerRollToHit)(this.setState({ BonusRolledToHit : true }))}}>\r\n              Roll to Hit!\r\n            </button>\r\n          )\r\n        }\r\n        else if((this.state.BonusRolledToHit) && (this.state.BonusSuccessfulHit) && (!this.state.BonusRolledDamage)){\r\n          return(\r\n            <button id=\"Init\" onClick={()=>{(this.BonusRollDamage)(this.setState({ BonusRolledDamage : true }))}}>\r\n              Roll Damage!\r\n            </button>\r\n          )\r\n        }\r\n      else return null\r\n    }\r\n  }\r\n\r\n//Displays \"Second Wind\" button if not already used once. Sets state to disallow bonus attack when clicked\r\n  BonusAction2 = () => {\r\n    if((!this.state.BonusActionTaken) && (!this.state.BonusAttacked) &&\r\n    (this.state.PlayerTurn) && (this.state.ActionTaken)){\r\n      if (!this.state.SecondWindUsed){\r\n        return(\r\n            <button id=\"SecondWind\" onClick={()=>{(this.PlayerSecondWind)(this.setState({ BonusActionTaken : true}))}}>\r\n              Bonus Action: Second Wind\r\n            </button>\r\n        )\r\n      }\r\n      else return null\r\n    }\r\n  }\r\n\r\n//simulates rolling for initiative for both characters after \"Roll for Initiative!\" clickec.\r\n  RollInit = () => {\r\n   let PlayerRoll = 0;\r\n   PlayerRoll = Math.floor((Math.random() * 19) +2);\r\n   let EnemyRoll = 0;\r\n   EnemyRoll = Math.floor((Math.random() * 19) +2);\r\n   this.Text = \"Your initiative roll was: \" + PlayerRoll + \"!\\n\";\r\n   this.Text += \"Bad Guy's initiative roll was: \" + EnemyRoll + \"!\\n\";\r\n   if (PlayerRoll > EnemyRoll){\r\n     this.Text += \"You go first!\\n\";\r\n     this.UpdateText();\r\n     this.SetPlayerTurnTrue();\r\n     this.PlayerTurn();\r\n   }\r\n   else {\r\n     this.Text += \"Bad Guy goes first!\\n\";\r\n     this.UpdateText();\r\n     this.SetPlayerTurnFalse();\r\n     this.EnemyAction();\r\n   }\r\n }\r\n\r\n//Updates image and combat log after \"Attack!\" clicked\r\n PlayerAttack = () => {\r\n   if ((this.state.BadGuyCurrentHitPoints > 0) && (this.state.PlayerTurn === true)){\r\n     this.setState({ CombatImage : WindUp });\r\n     this.Text += \"You rear your sword back and take a mighty swing!\\n\"\r\n     this.UpdateText()\r\n   }\r\n }\r\n\r\n//simulates rolling to hit in D&D\r\n PlayerRollToHit = () => {\r\n   this.RollToHitValue = ((Math.floor((Math.random() * 19) +2)) + this.ProficiencyBonus +\r\n   this.HigherMod());\r\n   if(this.RollToHitValue >= this.BadGuyArmorClass){\r\n     this.Text += \"Your roll of \" + this.RollToHitValue + \" got the best of Bad Guy's armor class (\" +\r\n     this.BadGuyArmorClass + \")!\\n\";\r\n     this.Text += \"Roll for damage!\\n\";\r\n     this.UpdateText();\r\n     this.setState({ SuccessfulHit : true});\r\n   }\r\n   else{\r\n     this.setState({ CombatImage : PlayerSecondAttack })\r\n     this.Text += \"Your roll of \" + this.RollToHitValue + \" wasn't enough to penetrate Bad Guy's armor class (\" +\r\n     this.BadGuyArmorClass + \")! You missed!\\n\";\r\n     this.Swoosh.play();\r\n     this.UpdateText();\r\n     (this.setState({ ActionTaken : true }))\r\n   }\r\n }\r\n\r\n//Player victory gif, Delay function to keep sounds separated.  Updates log, plays sound\r\n PlayerWins = () => {\r\n   this.Text += \"You have defeated Bad Guy!!\\n\"\r\n   this.UpdateText()\r\n   this.setState({ BonusActionTaken : true })\r\n   this.setState({ CombatImage : EnemyGameOver })\r\n   this.Ow.play();\r\n   let downSeconds = 3;\r\n   function Delay() {\r\n     downSeconds--;\r\n     if (downSeconds > 0) {\r\n       setTimeout(Delay, 100);\r\n     }\r\n     else {\r\n       var audio = new Audio(Oowah)\r\n       audio.play();\r\n     }\r\n   }\r\n   setTimeout(Delay, 400);\r\n   let seconds = 12;\r\n   function Delay2() {\r\n     seconds--;\r\n     if (seconds > 0) {\r\n       setTimeout(Delay2, 100);\r\n     }\r\n     else {\r\n       var audio2 = new Audio(HaHaHa)\r\n       audio2.play();\r\n     }\r\n   }\r\n   setTimeout(Delay2, 650);\r\n }\r\n\r\n//Different WindUp image and combat text when Bonus Attack clicked\r\n BonusPlayerAttack = () => {\r\n   if ((this.state.BadGuyCurrentHitPoints > 0) && (this.state.PlayerTurn === true)){\r\n     this.setState({ CombatImage : SecondWindUp });\r\n     this.Text += \"You prepare to skewer the enemy!\\n\"\r\n     this.UpdateText()\r\n   }\r\n }\r\n\r\n//simulates rolling to hit, updates combat log, moves to next step depending on reult\r\n BonusPlayerRollToHit = () => {\r\n   let RollToHitValue = 0;\r\n   RollToHitValue = ((Math.floor((Math.random() * 19) +2)) + this.ProficiencyBonus +\r\n   this.HigherMod());\r\n   if(RollToHitValue >= this.BadGuyArmorClass){\r\n     this.Text += \"Your roll of \" + RollToHitValue + \" got the best of Bad Guy's armor class (\" +\r\n     this.BadGuyArmorClass + \")!\\n\";\r\n     this.Text += \"Roll for damage!\\n\";\r\n     this.UpdateText();\r\n     this.setState({ BonusSuccessfulHit : true});\r\n   }\r\n   else{\r\n     this.Swoosh2.play();\r\n     this.setState({ CombatImage : PlayerSecondAttack })\r\n     this.Text += \"Your roll of \" + RollToHitValue + \" wasn't enough to penetrate Bad Guy's armor class (\" +\r\n     this.BadGuyArmorClass + \")! You missed!\\n\";\r\n     this.UpdateText();\r\n     (this.setState({ BonusActionTaken : true }))\r\n   }\r\n }\r\n\r\n//simulates rolling for damage, updates combat log, image and hit points, plays sound\r\n//delay function is to hopefully ensure that sound plays\r\n BonusRollDamage = () => {\r\n   this.setState({ CombatImage : PlayerSecondAttack })\r\n   let Damage = 0;\r\n   Damage = Number((Math.floor((Math.random() * 5) + 2)) + this.ProficiencyBonus);\r\n   this.Text += \"You slice into your enemy for \" + Damage + \" points of damage!\\n\";\r\n   this.SwingHit.play();\r\n   let downSeconds = 3;\r\n   function Delay() {\r\n     downSeconds--;\r\n     if (downSeconds > 0) {\r\n       setTimeout(Delay, 100);\r\n     }\r\n     else {\r\n       var audio = new Audio(Ow)\r\n       audio.play();\r\n     }\r\n   }\r\n   setTimeout(Delay, 50);\r\n   this.BadGuyCurrentHitPoints -= Damage;\r\n   this.setState({ BonusActionTaken : true })\r\n   this.UpdateBadGuyHitPoints();\r\n   this.UpdateText();\r\n }\r\n\r\n//siimulates rolling for damage, updates combat log, image, hit points,\r\n//delay function is to hopefully ensure that sound plays\r\n RollDamage = () => {\r\n   this.setState({ CombatImage : PlayerFirstSwing })\r\n   let Damage = 0;\r\n   Damage = Number((Math.floor((Math.random() * 5) + 2)) + this.ProficiencyBonus);\r\n   this.Text += \"You slice into your enemy for \" + Damage + \" points of damage!\\n\";\r\n   this.SwingHit.play();\r\n   let downSeconds = 3;\r\n   function Delay() {\r\n     downSeconds--;\r\n     if (downSeconds > 0) {\r\n       setTimeout(Delay, 100);\r\n     }\r\n     else {\r\n       var audio = new Audio(Ow)\r\n       audio.play();\r\n     }\r\n   }\r\n   setTimeout(Delay, 50);\r\n   this.BadGuyCurrentHitPoints -= Damage;\r\n   (this.setState({ ActionTaken : true }))\r\n   this.UpdateBadGuyHitPoints();\r\n   this.UpdateText();\r\n }\r\n\r\n//for when \"Second Wind\" is clicked.  Calculates amount healed, updates hit points, plays sound\r\n PlayerSecondWind = () => {\r\n   this.setState({ SecondWindUsed : true});\r\n   this.setState({ BonusAttackTaken : true});\r\n   this.Wind.play();\r\n   let SecondWind = 0;\r\n   SecondWind = ((Math.floor((Math.random() * 9) +2)) + 1);\r\n   this.Text += \"You use the Second Wind ability to heal for \" + SecondWind +\r\n   \" hit points!\\n\"\r\n   if ((this.CurrentHitPoints + SecondWind) > Number(this.MaxHitPoints())){\r\n     this.CurrentHitPoints = Number(this.MaxHitPoints())\r\n   }\r\n   else {\r\n     this.CurrentHitPoints += SecondWind;\r\n   }\r\n   this.UpdateText();\r\n   this.UpdateCurrentHitPoints();\r\n }\r\n\r\n   PlayerTurn = () => {\r\n     this.Text += \"Take your turn!!\\n\";\r\n     this.UpdateText();\r\n   }\r\n\r\n//Bad Guy turn.  Follows D&D logic to the best of my ability.  Delay function to separate sounds.\r\n//Rolls to hit, rolls damage, updates image and log, plays sound, sets states enabling turn to process.\r\n   EnemyFirstAttack = () => {\r\n     this.Text += \"Bad Guy attempts an attack!\\n\"\r\n     this.setState ({ CombatImage : EnemyFirstAttack })\r\n     this.UpdateText();\r\n     this.RollToHitValue = ((Math.floor((Math.random() * 19) +2)) + this.BadGuyProficiencyBonus +\r\n     this.BadGuyDexterityBonus);\r\n     this.Text += \"Bad Guy rolls to hit.  He rolls a \" + this.RollToHitValue + \"!\\n\"\r\n     this.UpdateText();\r\n     if(this.RollToHitValue >= this.ArmorClass){\r\n       console.log(this.CurrentHitPoints)\r\n       this.SwingHit.play()\r\n       let downSeconds = 4;\r\n       function Delay() {\r\n         downSeconds--;\r\n         if (downSeconds > 0) {\r\n           setTimeout(Delay, 100);\r\n         }\r\n         else {\r\n           var audio = new Audio(Owah)\r\n           audio.play();\r\n         }\r\n       }\r\n       setTimeout(Delay, 100);\r\n       let Damage = 0;\r\n       Damage = Number((Math.floor((Math.random() * 5) + 2)) + this.BadGuyProficiencyBonus);\r\n       this.Text += \"Your armor class is\" + this.ArmorClass + \", so he hits!\\n\";\r\n       this.UpdateText();\r\n       this.Text += \"Bad Guy swings his short sword. You take \" + Damage + \" points of damage!\\n\"\r\n       this.CurrentHitPoints -= Damage;\r\n       this.setState({ BadGuyActionTaken : true })\r\n       this.setState({ CurrentHitPoints : this.CurrentHitPoints }, this.EnemyBonusAction)\r\n       this.UpdateText();\r\n     }\r\n\r\n     else {\r\n       this.Text += \"Bad Guy misses!\\n\"\r\n       this.Swoosh.play();\r\n       this.UpdateText();\r\n       this.setState({ BadGuyActionTaken : true }, this.EnemyBonusAction)\r\n     }\r\n   }\r\n\r\n//Rolls for amount healed, updates combat log, plays sound, sets states to prevent\r\n//additional use on following turns, and to mark bonus action as spent\r\n   EnemySecondWind = () => {\r\n       let SecondWind = 0;\r\n       SecondWind = ((Math.floor((Math.random() * 9) +2)) + 1);\r\n       this.Text += \"Bad Guy uses the Second Wind bonus action to heal for \" + SecondWind +\r\n       \" hit points!\\n\"\r\n       if ((SecondWind + this.BadGuyCurrentHitPoints) > this.BadGuyMaxHitPoints){\r\n         this.BadGuyCurrentHitPoints = this.BadGuyMaxHitPoints\r\n       }\r\n       else {\r\n         this.BadGuyCurrentHitPoints += SecondWind;\r\n       }\r\n       this.UpdateBadGuyHitPoints();\r\n       this.UpdateText();\r\n       this.setState({ BadGuySecondWindUsed : true});\r\n       this.setState ({ BadGuyBonusActionTaken : true}, this.EnemyVictory)\r\n       this.SetPlayerTurnTrue()\r\n       this.Wind.play();\r\n     }\r\n\r\n   //Bad Guy bonus attack logic, updates combat log, image, and plays sound(s)\r\n   EnemySecondAttack = () => {\r\n     if ((this.state.CurrentHitPoints > 0) && (!this.state.PlayerTurn)){\r\n       this.Text += \"Bad Guy attempts a second attack!\\n\"\r\n       this.UpdateText();\r\n       this.setState({ CombatImage : EnemySecondAttack })\r\n       this.RollToHitValue = 0;\r\n       this.RollToHitValue = ((Math.floor((Math.random() * 19) +2)) + this.BadGuyProficiencyBonus +\r\n       this.BadGuyDexterityBonus);\r\n       this.Text += \"Bad Guy rolls to hit.  He rolls a \" + this.RollToHitValue + \"!\\n\"\r\n       this.UpdateText();\r\n       if(this.RollToHitValue >= this.ArmorClass){\r\n         this.SwingHit.play();\r\n         let downSeconds = 4;\r\n         function Delay() {\r\n           downSeconds--;\r\n           if (downSeconds > 0) {\r\n             setTimeout(Delay, 100);\r\n           }\r\n           else {\r\n             var audio = new Audio(Owah)\r\n             audio.play();\r\n           }\r\n         }\r\n         setTimeout(Delay, 100);\r\n         let Damage = 0;\r\n         Damage = Number((Math.floor((Math.random() * 5) + 2)) + this.BadGuyProficiencyBonus);\r\n         this.Text += \"Your armor class is\" + this.ArmorClass.toString() + \", he hits!\\n\";\r\n         this.UpdateText();\r\n         this.Text += \"Bad Guy swings his short sword. You take \" + Damage + \" points of damage!\\n\"\r\n         this.setState ({ BadGuyBonusActionTaken : true})\r\n         this.UpdateText();\r\n         this.CurrentHitPoints -= Damage;\r\n\r\n         this.setState({ CurrentHitPoints : this.CurrentHitPoints }, this.EnemyVictory)\r\n         setTimeout(this.SetPlayerTurnTrue, 100)\r\n       }\r\n         else {\r\n           this.Text += \"Bad Guy misses!\\n\"\r\n           this.Swoosh2.play();\r\n           this.Swoosh2.play();\r\n           this.setState ({ BadGuyBonusActionTaken : true}, this.EnemyTurnOver)\r\n           this.UpdateText();\r\n         }\r\n       }\r\n     }\r\n\r\n   EnemyTurnOver = () => {\r\n     this.Text += \"Bad Guy's turn is over.\\n\";\r\n     this.PlayerTurn();\r\n     this.UpdateText();\r\n     this.ResetPlayerTurn();\r\n   }\r\n\r\n//plays BadGuy victory gif, combat log, plays sound\r\n   EnemyVictory = () => {\r\n     if (this.CurrentHitPoints < 1){\r\n       this.setState({ GameOver : true })\r\n       this.Text += \"Bad Guy has defeated you!\\n\"\r\n       this.setState({ CombatImage : PlayerGameOver })\r\n       this.UpdateText();\r\n       this.Owah2.play();\r\n       let downSeconds = 8;\r\n       function Delay() {\r\n         downSeconds--;\r\n         if (downSeconds > 0) {\r\n           setTimeout(Delay, 100);\r\n         }\r\n         else {\r\n           var audio = new Audio(HaHa)\r\n           audio.play();\r\n         }\r\n       }\r\n       setTimeout(Delay, 100);\r\n       let seconds = 12;\r\n       function Delay2() {\r\n         seconds--;\r\n         if (seconds > 0) {\r\n           setTimeout(Delay2, 100);\r\n         }\r\n         else {\r\n           var audio2 = new Audio(TryAgain)\r\n           audio2.play();\r\n         }\r\n       }\r\n       setTimeout(Delay2, 650);\r\n     }\r\n     else{\r\n       this.EnemyTurnOver();\r\n     }\r\n   }\r\n\r\n//Bad Guy will attack if it's his turn and player still alive\r\n   EnemyAction = () => {\r\n     console.log(this.state.CurrentHitPoints);\r\n     console.log(this.state.PlayerTurn);\r\n     if ((this.state.CurrentHitPoints > 0) && (!this.state.PlayerTurn)){\r\n       setTimeout(this.EnemyFirstAttack, 100);\r\n      }\r\n   }\r\n\r\n//Invokdes second wind function if under half health, otherwise attacks, victory sequence if player dead.\r\n   EnemyBonusAction = () => {\r\n     if((this.BadGuyCurrentHitPoints < (this.BadGuyMaxHitPoints/2)) && (!this.state.BadGuySecondWindUsed) &&\r\n      (this.state.CurrentHitPoints > 0) && (!this.state.PlayerTurn)){\r\n         setTimeout(this.EnemySecondWind, 750)\r\n     }\r\n     else if((this.state.CurrentHitPoints > 0) && (!this.state.PlayerTurn) && (!this.BadGuyBonusActionTaken)){\r\n       setTimeout(this.EnemySecondAttack, 500)\r\n     }\r\n     else if (this.CurrentHitPoints < 1){\r\n       this.EnemyVictory();\r\n     }\r\n  }\r\n\r\nrender(){\r\n\r\n   return(\r\n    <>\r\n    <div class=\"BarContainer\">\r\n      <BonusBar\r\n      CurrentHitPoints={this.state.CurrentHitPoints} Strength={this.props.Strength}\r\n      Dexterity={this.props.Dexterity} Constitution={this.props.Constitution}\r\n      Intelligence={this.props.Intelligence} Wisdom={this.props.Wisdom}\r\n      Charisma={this.props.Charisma}  />\r\n      <div class=\"VerticalMiddle\">\r\n      <div class=\"Image\" id=\"CombatImage\">\r\n        <img src={this.state.CombatImage}\r\n        alt=\"new\"\r\n        style={{width: 960, height:600}}\r\n        resizeMode='cover'\r\n        />\r\n      </div>\r\n        <div id=\"upperContent\" class=\"upperContent\">\r\n          <div id=\"upperSubLeft\" class=\"upperSub\">\r\n          {this.BeginCombat()}\r\n          </div>\r\n          <div id=\"upperSubRight\" class=\"upperSub\">\r\n            <div id=\"upperSubRight\" class=\"upperSub\">\r\n            </div>\r\n            <div id=\"middleSubRight\" class=\"upperSub\">\r\n            {this.BonusAction1()}\r\n            </div>\r\n            <div id=\"lowerSubRight\" class=\"upperSub\">\r\n            {this.BonusAction2()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"combatLog\" class=\"content\">\r\n          {this.state.Text}\r\n        </div>\r\n      </div>\r\n      <BadGuyStats BadGuyCurrentHitPoints={this.state.BadGuyCurrentHitPoints} />\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n}\r\nexport default CompletedStats;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport StrengthBox from \"./StrengthBox\";\r\nimport ConstitutionBox from \"./ConstitutionBox\";\r\nimport IntelligenceBox from \"./IntelligenceBox\";\r\nimport WisdomBox from \"./WisdomBox\";\r\nimport CharismaBox from \"./CharismaBox\";\r\nimport DexterityBox from \"./DexterityBox\";\r\nimport StatList from \"./StatsList\";\r\nimport CompletedStats from \"./CompletedStats\"\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align: center;\r\n  justify-content: center;\r\n`;\r\n\r\n//generate a Fighter's stat - Roll 4 d6!\r\nfunction randomStat(){\r\n  var x1 = Math.floor((Math.random() * 5) +2);\r\n  var x2 = Math.floor((Math.random() * 5) +2);\r\n  var x3 = Math.floor((Math.random() * 5) +2);\r\n  var x4 = Math.floor((Math.random() * 5) +2);\r\n  //Find the highest 3 rolls and add them!\r\n  var fourD6 = [x1, x2, x3, x4];\r\n  fourD6.sort(function(a,b){return a - b});\r\n  fourD6.shift();\r\n  var x = fourD6.reduce((a, b) => a + b);\r\n\r\nreturn x;\r\n}\r\n\r\n//creates 6 random stats for the user's consideration.\r\nconst initialList = [\r\n  { id: 1, title: randomStat(), added: false },\r\n  { id: 2, title: randomStat(), added: false },\r\n  { id: 3, title: randomStat(), added: false },\r\n  { id: 4, title: randomStat(), added: false },\r\n  { id: 5, title: randomStat(), added: false },\r\n  { id: 6, title: randomStat(), added: false },\r\n];\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    list: initialList,\r\n    addedStrength: [],\r\n    addedDexterity: [],\r\n    addedConstitution: [],\r\n    addedIntelligence: [],\r\n    addedWisdom: [],\r\n    addedCharisma: [],\r\n    Strength: 0,\r\n    Dexterity: 0,\r\n    Constitution: 0,\r\n    Intelligence: 0,\r\n    Wisdom: 0,\r\n    Charisma: 0,\r\n    CurHP: 0,\r\n    MaxHP: 0,\r\n    nextModule : false\r\n  };\r\n\r\n//Updating these 'handle' setState's needs to happen\r\n//in separate statements or bad things happen\r\n//these \"handle\" callback functions each do three things, add the dropped stat to a list,\r\n//remove the stat from the as yet undragged list of stats, and\r\n//assign the stat to a variable to be used in the next stage\r\n  handleDropDexterity = id => {\r\n    this.setState({addedDexterity: ([this.state.list.find(stats => stats.id === id)])});\r\n    this.setState({list: this.state.list.filter(stats => stats.id !== id)});\r\n    this.setState({Dexterity: Number(this.state.addedDexterity.map(x => x.title))});\r\n  };\r\n  handleDropConstitution = id => {\r\n    this.setState({addedConstitution: ([this.state.list.find(stats => stats.id === id)])});\r\n    this.setState({list: this.state.list.filter(stats => stats.id !== id)});\r\n    this.setState({Constitution: Number(this.state.addedConstitution.map(x => x.title))});\r\n  };\r\n  handleDropIntelligence = id => {\r\n    this.setState({addedIntelligence: ([this.state.list.find(stats => stats.id === id)])});\r\n    this.setState({list: this.state.list.filter(stats => stats.id !== id)});\r\n    this.setState({Intelligence: Number(this.state.addedIntelligence.map(x => x.title))});\r\n  };\r\n  handleDropStrength= id => {\r\n    this.setState({addedStrength: ([this.state.list.find(stats => stats.id === id)])});\r\n    this.setState({list: this.state.list.filter(stats => stats.id !== id)});\r\n    this.setState({Strength: Number(this.state.addedStrength.map(x => x.title))});\r\n  };\r\n  handleDropWisdom = id => {\r\n    this.setState({addedWisdom: ([this.state.list.find(stats => stats.id === id)])});\r\n    this.setState({list: this.state.list.filter(stats => stats.id !== id)});\r\n    this.setState({Wisdom: Number(this.state.addedWisdom.map(x => x.title))});\r\n  };\r\n  handleDropCharisma = id => {\r\n    this.setState({addedCharisma: ([this.state.list.find(stats => stats.id === id)])});\r\n    this.setState({list: this.state.list.filter(stats => stats.id !== id)});\r\n    this.setState({Charisma: Number(this.state.addedCharisma.map(x => x.title))});\r\n  };\r\n\r\n//a button to move to next stage once desired stats are where the user wants them\r\n  Button = () => {\r\n    return (\r\n      <div>\r\n        <button onClick={this.UpdatePage}>\r\n          Next Stage!\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n//a way to conditionally render the page via state\r\n  UpdatePage = () => {\r\n    this.setState({ nextModule : true })\r\n  }\r\n\r\n  render() {\r\n    const { list, addedStrength, addedDexterity, addedConstitution, addedIntelligence,\r\n      addedWisdom, addedCharisma } = this.state;\r\n\r\n    console.log('render', this.props, this.state);\r\n    if(!this.state.nextModule){\r\n      return (\r\n\r\n        <>\r\n        <Container>\r\n        <h1>\r\n        Create your fighter!\r\n        </h1>\r\n        </Container>\r\n        <Container class=\"Statlist\">\r\n        <StatList list={list} />\r\n        </Container>\r\n        <Container><br />\r\n        Drag rolled stats from above to categories below!\r\n        <br />\r\n        </Container>\r\n        <br />\r\n        <Container>\r\n        <StrengthBox\r\n          list={addedStrength}\r\n          setStrength={this.handleDropStrength}\r\n        />\r\n        <DexterityBox\r\n          list={addedDexterity}\r\n          setDexterity={this.handleDropDexterity}\r\n        />\r\n        <ConstitutionBox\r\n          list={addedConstitution}\r\n          setConstitution={this.handleDropConstitution}\r\n        />\r\n        <IntelligenceBox\r\n          list={addedIntelligence}\r\n          setIntelligence ={this.handleDropIntelligence}\r\n        />\r\n        <WisdomBox\r\n          list={addedWisdom}\r\n          setWisdom={this.handleDropWisdom}\r\n        />\r\n        <CharismaBox\r\n          list={addedCharisma}\r\n          setCharisma={this.handleDropCharisma}\r\n        />\r\n        </Container>\r\n        <Container>\r\n        {this.Button()}\r\n        </Container>\r\n        </>\r\n      );\r\n    }\r\n    else{\r\n      return(\r\n        <CompletedStats Strength={this.state.Strength} Dexterity={this.state.Dexterity}\r\n        Constitution={this.state.Constitution} Intelligence={this.state.Intelligence}\r\n        Wisdom={this.state.Wisdom} Charisma={this.state.Wisdom}/>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./Main.js\"\r\nimport \"./Intro.css\"\r\n\r\n\r\n//Displays intro text until user clicks button to start character creation\r\nclass Intro extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n  this.state = {\r\n    EndIntro : false\r\n  }\r\n}\r\n\r\nButton = () => {\r\n  return (\r\n    <div id=\"button\">\r\n      <button onClick={this.UpdatePage}>\r\n        Let's fight!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nUpdatePage = () => {\r\n  this.setState({ EndIntro : true })\r\n}\r\n  render(){\r\n    if(!this.state.EndIntro){\r\n      return(\r\n        <body margin=\"0\" id=\"Intro\" class=\"Intro\">\r\n          <div id=\"around\">\r\n            <div id=\"pretty\" class=\"pretty\">\r\n              <p> The notoriously infamous villain \"Bad Guy\" has ruined his homelands\r\n              and is about to ruin yours!</p>\r\n\r\n              <p> (He's also been mocking you viciously, insulting your mother, and contorting his\r\n              face into really annoying sneers!)</p>\r\n\r\n              <p> You've only one choice!  You must take up arms, become a fighter\r\n               and end him once and for all!</p>\r\n\r\n              <p>Will you take up the fight?</p>\r\n              <p></p>\r\n              {this.Button()}\r\n            </div>\r\n          </div>\r\n        </body>\r\n      )\r\n    }\r\n\r\n\r\n    else{\r\n      return(\r\n        <Main />\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Intro;\r\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport Intro from \"./Intro.js\";\nimport './index.css';\n\nclass App extends React.Component {\n  render() {\n    return(\n      <>\n      <DndProvider backend={HTML5Backend}>\n      <Intro />\n      </DndProvider>\n      </>\n    )\n  }\n}\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}